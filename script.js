const vkConnect = new VKConnect();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
vkConnect.send('VKWebAppInit', {});

document.getElementById('buyButton').addEventListener('click', function() {
    // –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    vkConnect.send('VKWebAppGetUserInfo', {})
        .then(user => {
            // –û—Ç–∫—Ä—ã—Ç–∏–µ VK Pay
            vkConnect.send('VKWebAppOpenPayForm', {
                app_id: YOUR_APP_ID, // ID –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                action: 'pay-to-service',
                params: {
                    amount: '29900', // 299 —Ä—É–± –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                    description: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞ –Ω–∞ 30 –¥–Ω–µ–π',
                    user_id: user.id
                }
            })
            .then(data => {
                if (data.status === 'success') {
                    // –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞
                    processPayment(user.id, data.order_id);
                }
            })
            .catch(error => {
                console.error('Payment error:', error);
            });
        })
        .catch(error => {
            console.error('User info error:', error);
        });
});

function processPayment(userId, orderId) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    fetch('payment.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            user_id: userId,
            order_id: orderId,
            timestamp: Math.floor(Date.now() / 1000)
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showSuccess();
        } else {
            showError();
        }
    })
    .catch(error => {
        console.error('Server error:', error);
        showError();
    });
}

function showSuccess() {
    vkConnect.send('VKWebAppShowMessage', {
        message: 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞!'
    });
}

function showError() {
    vkConnect.send('VKWebAppShowMessage', {
        message: '‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    });
}
